Source: libclass-load-perl
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Uploaders: gregor herrmann <gregoa@debian.org>,
           Angel Abad <angel@debian.org>
Section: perl
Testsuite: autopkgtest-pkg-perl
Priority: optional
Build-Depends: debhelper (>= 10)
Build-Depends-Indep: libdata-optlist-perl (>= 0.110),
                     libmodule-implementation-perl,
                     libmodule-runtime-perl,
                     libpackage-stash-perl,
                     libtest-fatal-perl,
                     libtest-needs-perl,
                     libtest-without-module-perl,
                     libtry-tiny-perl,
                     perl
Standards-Version: 4.1.5
Vcs-Browser: https://salsa.debian.org/perl-team/modules/packages/libclass-load-perl
Vcs-Git: https://salsa.debian.org/perl-team/modules/packages/libclass-load-perl.git
Homepage: https://metacpan.org/release/Class-Load

Package: libclass-load-perl
Architecture: all
Depends: ${misc:Depends},
         ${perl:Depends},
         libdata-optlist-perl (>= 0.110),
         libmodule-implementation-perl,
         libmodule-runtime-perl,
         libpackage-stash-perl,
         libtry-tiny-perl
Description: module for loading modules by name
 "require EXPR" only accepts Class/Name.pm style module names, not
 Class::Name. For that, Class::Load provides "load_class 'Class::Name'".
 .
 It's often useful to test whether a module can be loaded, instead of throwing
 an error when it's not available. For that, Class::Load provides
 "try_load_class 'Class::Name'".
 .
 Finally, sometimes it is important to know whether a particular class has
 been loaded. Asking %INC is an option, but that will miss inner packages and
 any class for which the filename does not correspond to the package name. For
 that, this module provides "is_class_loaded 'Class::Name'".
